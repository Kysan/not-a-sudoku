{"version":3,"sources":["Utils/grid.js","Components/Square.jsx","Components/Sudoku.jsx","App.jsx","index.js"],"names":["arraysEqual","arr1","arr2","length","i","checkIfFull","grid","x","y","checkWin","p","win","console","log","Square","renderSymbol","value","this","props","onClick","className","Component","Sudoku","state","playerIdTurn","message","finish","handleCaseClick","setState","componentDidMount","ResetParty","Fragment","id","map","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10ac1704.chunk.js","sourcesContent":["\r\n\r\n\r\nfunction arraysEqual(arr1, arr2) {\r\n  if (arr1.length !== arr2.length)\r\n    return false;\r\n  for (var i = arr1.length; i--;) {\r\n    if (arr1[i] !== arr2[i])\r\n      return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n\r\n\r\nfunction checkIfFull(grid) {\r\n  for (let x = 0; x < 3; ++x) {\r\n    for (let y = 0; y < 3; ++y) {\r\n      if (grid[x][y] === -1) return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction checkWin(grid) {\r\n  for (let p = 0; p <= 1; p++) {\r\n    let win = [p, p, p];\r\n    console.log(\"to win\")\r\n    console.log(win);\r\n    console.log(\"current\")\r\n    console.log([grid[0][0], grid[0][1], grid[0][2]])\r\n    if (arraysEqual([grid[0][0], grid[0][1], grid[0][2]], win)) return true;\r\n    if (arraysEqual([grid[1][0], grid[1][1], grid[1][2]], win)) return true;\r\n    if (arraysEqual([grid[2][0], grid[2][1], grid[2][2]], win)) return true;\r\n\r\n\r\n    if (arraysEqual([grid[0][0], grid[1][0], grid[2][0]], win)) return true;\r\n    if (arraysEqual([grid[0][1], grid[1][1], grid[2][1]], win)) return true;\r\n    if (arraysEqual([grid[0][2], grid[1][2], grid[2][2]], win)) return true;\r\n\r\n\r\n    if (arraysEqual([grid[0][0], grid[1][1], grid[2][2]], win)) return true;\r\n    if (arraysEqual([grid[0][2], grid[1][1], grid[2][0]], win)) return true;\r\n\r\n  }\r\n  return false;\r\n}\r\n\r\nexport { checkIfFull, checkWin };\r\n","import React, { Component } from \"react\";\r\n\r\nclass Square extends Component {\r\n  renderSymbol = (value) => {\r\n    if (value === 1) {\r\n      return \"X\";\r\n    } else if (value === 0) {\r\n      return \"O\";\r\n    } else {\r\n      return \"?\";\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { value, onClick } = this.props;\r\n    return (\r\n      <button className={Square} onClick={onClick} className=\"square\">\r\n        {this.renderSymbol(value)}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Square;\r\n","import React, { Component } from \"react\";\r\nimport { checkIfFull, checkWin } from \"../Utils/grid\";\r\nimport Square from \"./Square\";\r\n\r\nclass Sudoku extends Component {\r\n  state = {\r\n    grid: [\r\n      [-1, -1, -1],\r\n      [-1, -1, -1],\r\n      [-1, -1, -1],\r\n    ],\r\n    playerIdTurn: 0,\r\n    message: \"Player turn 0\",\r\n    finish: false,\r\n  };\r\n\r\n  handleCaseClick = (x, y) => {\r\n    // alert(\"clicked : \", x, y);\r\n    let { grid, playerIdTurn } = this.state;\r\n\r\n    // * la case est déjà joué\r\n    if (grid[x][y] != -1) return;\r\n\r\n    grid[x][y] = playerIdTurn;\r\n    this.setState({ grid });\r\n\r\n    // * check si victoire || grille complête\r\n\r\n    if (checkWin(grid)) {\r\n      this.setState({\r\n        message: `Player ${playerIdTurn} won !!!`,\r\n        finish: true,\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (checkIfFull(grid)) {\r\n      this.setState({ message: `Draw !!!`, finish: true });\r\n      return;\r\n    }\r\n\r\n    // * change le tour si non\r\n    playerIdTurn = playerIdTurn === 0 ? 1 : 0;\r\n    this.setState({ message: `Player ${playerIdTurn} turn`, playerIdTurn });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.ResetParty();\r\n  };\r\n\r\n  ResetParty = () => {\r\n    this.setState({\r\n      grid: [\r\n        [-1, -1, -1],\r\n        [-1, -1, -1],\r\n        [-1, -1, -1],\r\n      ],\r\n      playerIdTurn: 0,\r\n      message: \"Player turn 0\",\r\n      finish: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { grid, message, finish } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <div id=\"message\">{message}</div>\r\n\r\n        <div id=\"board\">\r\n          {[0, 1, 2].map((x) => (\r\n            <div className=\"row\" key={x}>\r\n              {[0, 1, 2].map((y) => (\r\n                <Square\r\n                  value={grid[x][y]}\r\n                  onClick={() => {\r\n                    this.handleCaseClick(x, y);\r\n                  }}\r\n                  key={y}\r\n                />\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div id=\"replay-message\">\r\n          {finish && <button onClick={this.ResetParty}>replay ?</button>}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sudoku;\r\n","import React, { Component } from \"react\";\nimport Sudoku from \"./Components/Sudoku\";\n\nclass App extends Component {\n  state = {};\n  render() {\n    return (\n      <React.Fragment>\n        <Sudoku />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}